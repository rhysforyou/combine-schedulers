// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 52;
	objects = {

/* Begin PBXAggregateTarget section */
		"combine-schedulers::combine-schedulersPackageTests::ProductTarget" /* combine-schedulersPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_100 /* Build configuration list for PBXAggregateTarget "combine-schedulersPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_103 /* PBXTargetDependency */,
			);
			name = "combine-schedulersPackageTests";
			productName = "combine-schedulersPackageTests";
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		B76F4C8129909980006C78C4 /* XCTestDynamicOverlay.xcframework in Frameworks */ = {isa = PBXBuildFile; fileRef = B76F4C8029909980006C78C4 /* XCTestDynamicOverlay.xcframework */; };
		OBJ_52 /* AnyScheduler.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* AnyScheduler.swift */; };
		OBJ_53 /* Concurrency.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* Concurrency.swift */; };
		OBJ_54 /* ImmediateScheduler.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* ImmediateScheduler.swift */; };
		OBJ_55 /* Deprecations.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* Deprecations.swift */; };
		OBJ_56 /* Lock.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Lock.swift */; };
		OBJ_57 /* NSRecursiveLock.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* NSRecursiveLock.swift */; };
		OBJ_58 /* SwiftUI.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* SwiftUI.swift */; };
		OBJ_59 /* TestScheduler.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* TestScheduler.swift */; };
		OBJ_60 /* Timer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* Timer.swift */; };
		OBJ_61 /* UIKit.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* UIKit.swift */; };
		OBJ_62 /* UIScheduler.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* UIScheduler.swift */; };
		OBJ_63 /* UnimplementedScheduler.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* UnimplementedScheduler.swift */; };
		OBJ_73 /* ImmediateSchedulerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* ImmediateSchedulerTests.swift */; };
		OBJ_74 /* TestSchedulerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* TestSchedulerTests.swift */; };
		OBJ_75 /* TimerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* TimerTests.swift */; };
		OBJ_76 /* UISchedulerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* UISchedulerTests.swift */; };
		OBJ_77 /* UnimplementedSchedulerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* UnimplementedSchedulerTests.swift */; };
		OBJ_79 /* CombineSchedulers.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "combine-schedulers::CombineSchedulers::Product" /* CombineSchedulers.framework */; };
		OBJ_98 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		B76F4C7C29909907006C78C4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "combine-schedulers::CombineSchedulers";
			remoteInfo = CombineSchedulers;
		};
		B76F4C7E29909907006C78C4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "combine-schedulers::CombineSchedulersTests";
			remoteInfo = CombineSchedulersTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		B76F4C8029909980006C78C4 /* XCTestDynamicOverlay.xcframework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.xcframework; name = XCTestDynamicOverlay.xcframework; path = Carthage/Build/XCTestDynamicOverlay.xcframework; sourceTree = "<group>"; };
		OBJ_10 /* Concurrency.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Concurrency.swift; sourceTree = "<group>"; };
		OBJ_11 /* ImmediateScheduler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ImmediateScheduler.swift; sourceTree = "<group>"; };
		OBJ_13 /* Deprecations.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Deprecations.swift; sourceTree = "<group>"; };
		OBJ_14 /* Lock.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Lock.swift; sourceTree = "<group>"; };
		OBJ_15 /* NSRecursiveLock.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NSRecursiveLock.swift; sourceTree = "<group>"; };
		OBJ_16 /* SwiftUI.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SwiftUI.swift; sourceTree = "<group>"; };
		OBJ_17 /* TestScheduler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestScheduler.swift; sourceTree = "<group>"; };
		OBJ_18 /* Timer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Timer.swift; sourceTree = "<group>"; };
		OBJ_19 /* UIKit.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UIKit.swift; sourceTree = "<group>"; };
		OBJ_20 /* UIScheduler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UIScheduler.swift; sourceTree = "<group>"; };
		OBJ_21 /* UnimplementedScheduler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UnimplementedScheduler.swift; sourceTree = "<group>"; };
		OBJ_24 /* ImmediateSchedulerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ImmediateSchedulerTests.swift; sourceTree = "<group>"; };
		OBJ_25 /* TestSchedulerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestSchedulerTests.swift; sourceTree = "<group>"; };
		OBJ_26 /* TimerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TimerTests.swift; sourceTree = "<group>"; };
		OBJ_27 /* UISchedulerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UISchedulerTests.swift; sourceTree = "<group>"; };
		OBJ_28 /* UnimplementedSchedulerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UnimplementedSchedulerTests.swift; sourceTree = "<group>"; };
		OBJ_43 /* LICENSE */ = {isa = PBXFileReference; lastKnownFileType = text; path = LICENSE; sourceTree = "<group>"; };
		OBJ_44 /* Makefile */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.make; path = Makefile; sourceTree = "<group>"; };
		OBJ_45 /* Cartfile */ = {isa = PBXFileReference; lastKnownFileType = text; path = Cartfile; sourceTree = "<group>"; };
		OBJ_46 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* AnyScheduler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AnyScheduler.swift; sourceTree = "<group>"; };
		"combine-schedulers::CombineSchedulers::Product" /* CombineSchedulers.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = CombineSchedulers.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"combine-schedulers::CombineSchedulersTests::Product" /* CombineSchedulersTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; path = CombineSchedulersTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_64 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				B76F4C8129909980006C78C4 /* XCTestDynamicOverlay.xcframework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_78 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_79 /* CombineSchedulers.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		B76F4C7F29909974006C78C4 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				B76F4C8029909980006C78C4 /* XCTestDynamicOverlay.xcframework */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_12 /* Internal */ = {
			isa = PBXGroup;
			children = (
				OBJ_13 /* Deprecations.swift */,
				OBJ_14 /* Lock.swift */,
				OBJ_15 /* NSRecursiveLock.swift */,
			);
			path = Internal;
			sourceTree = "<group>";
		};
		OBJ_22 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_23 /* CombineSchedulersTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_23 /* CombineSchedulersTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_24 /* ImmediateSchedulerTests.swift */,
				OBJ_25 /* TestSchedulerTests.swift */,
				OBJ_26 /* TimerTests.swift */,
				OBJ_27 /* UISchedulerTests.swift */,
				OBJ_28 /* UnimplementedSchedulerTests.swift */,
			);
			name = CombineSchedulersTests;
			path = Tests/CombineSchedulersTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_39 /* Products */ = {
			isa = PBXGroup;
			children = (
				"combine-schedulers::CombineSchedulers::Product" /* CombineSchedulers.framework */,
				"combine-schedulers::CombineSchedulersTests::Product" /* CombineSchedulersTests.xctest */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_22 /* Tests */,
				B76F4C7F29909974006C78C4 /* Dependencies */,
				OBJ_39 /* Products */,
				OBJ_43 /* LICENSE */,
				OBJ_44 /* Makefile */,
				OBJ_45 /* Cartfile */,
				OBJ_46 /* README.md */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* CombineSchedulers */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* CombineSchedulers */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* AnyScheduler.swift */,
				OBJ_10 /* Concurrency.swift */,
				OBJ_11 /* ImmediateScheduler.swift */,
				OBJ_12 /* Internal */,
				OBJ_16 /* SwiftUI.swift */,
				OBJ_17 /* TestScheduler.swift */,
				OBJ_18 /* Timer.swift */,
				OBJ_19 /* UIKit.swift */,
				OBJ_20 /* UIScheduler.swift */,
				OBJ_21 /* UnimplementedScheduler.swift */,
			);
			name = CombineSchedulers;
			path = Sources/CombineSchedulers;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"combine-schedulers::CombineSchedulers" /* CombineSchedulers */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_48 /* Build configuration list for PBXNativeTarget "CombineSchedulers" */;
			buildPhases = (
				OBJ_51 /* Sources */,
				OBJ_64 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CombineSchedulers;
			productName = CombineSchedulers;
			productReference = "combine-schedulers::CombineSchedulers::Product" /* CombineSchedulers.framework */;
			productType = "com.apple.product-type.framework";
		};
		"combine-schedulers::CombineSchedulersTests" /* CombineSchedulersTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_69 /* Build configuration list for PBXNativeTarget "CombineSchedulersTests" */;
			buildPhases = (
				OBJ_72 /* Sources */,
				OBJ_78 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_81 /* PBXTargetDependency */,
			);
			name = CombineSchedulersTests;
			productName = CombineSchedulersTests;
			productReference = "combine-schedulers::CombineSchedulersTests::Product" /* CombineSchedulersTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"combine-schedulers::SwiftPMPackageDescription" /* combine-schedulersPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_94 /* Build configuration list for PBXNativeTarget "combine-schedulersPackageDescription" */;
			buildPhases = (
				OBJ_97 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "combine-schedulersPackageDescription";
			productName = "combine-schedulersPackageDescription";
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 9999;
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "combine-schedulers" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_39 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"combine-schedulers::CombineSchedulers" /* CombineSchedulers */,
				"combine-schedulers::CombineSchedulersTests" /* CombineSchedulersTests */,
				"combine-schedulers::SwiftPMPackageDescription" /* combine-schedulersPackageDescription */,
				"combine-schedulers::combine-schedulersPackageTests::ProductTarget" /* combine-schedulersPackageTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_51 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_52 /* AnyScheduler.swift in Sources */,
				OBJ_53 /* Concurrency.swift in Sources */,
				OBJ_54 /* ImmediateScheduler.swift in Sources */,
				OBJ_55 /* Deprecations.swift in Sources */,
				OBJ_56 /* Lock.swift in Sources */,
				OBJ_57 /* NSRecursiveLock.swift in Sources */,
				OBJ_58 /* SwiftUI.swift in Sources */,
				OBJ_59 /* TestScheduler.swift in Sources */,
				OBJ_60 /* Timer.swift in Sources */,
				OBJ_61 /* UIKit.swift in Sources */,
				OBJ_62 /* UIScheduler.swift in Sources */,
				OBJ_63 /* UnimplementedScheduler.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_72 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_73 /* ImmediateSchedulerTests.swift in Sources */,
				OBJ_74 /* TestSchedulerTests.swift in Sources */,
				OBJ_75 /* TimerTests.swift in Sources */,
				OBJ_76 /* UISchedulerTests.swift in Sources */,
				OBJ_77 /* UnimplementedSchedulerTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_97 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_98 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_103 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "combine-schedulers::CombineSchedulersTests" /* CombineSchedulersTests */;
			targetProxy = B76F4C7E29909907006C78C4 /* PBXContainerItemProxy */;
		};
		OBJ_81 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "combine-schedulers::CombineSchedulers" /* CombineSchedulers */;
			targetProxy = B76F4C7C29909907006C78C4 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_101 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_102 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
					"DEBUG=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "$(AVAILABLE_PLATFORMS)";
				SUPPORTS_MACCATALYST = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "$(AVAILABLE_PLATFORMS)";
				SUPPORTS_MACCATALYST = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE";
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_49 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CURRENT_PROJECT_VERSION = 1;
				DRIVERKIT_DEPLOYMENT_TARGET = 19.0;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "combine-schedulers.xcodeproj/CombineSchedulers_Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 13.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"$(TOOLCHAIN_DIR)/usr/lib/swift/macosx",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CombineSchedulers;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = CombineSchedulers;
				TVOS_DEPLOYMENT_TARGET = 13.0;
				WATCHOS_DEPLOYMENT_TARGET = 6.0;
			};
			name = Debug;
		};
		OBJ_50 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CURRENT_PROJECT_VERSION = 1;
				DRIVERKIT_DEPLOYMENT_TARGET = 19.0;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "combine-schedulers.xcodeproj/CombineSchedulers_Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 13.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"$(TOOLCHAIN_DIR)/usr/lib/swift/macosx",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CombineSchedulers;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = CombineSchedulers;
				TVOS_DEPLOYMENT_TARGET = 13.0;
				WATCHOS_DEPLOYMENT_TARGET = 6.0;
			};
			name = Release;
		};
		OBJ_70 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DRIVERKIT_DEPLOYMENT_TARGET = 19.0;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "combine-schedulers.xcodeproj/CombineSchedulersTests_Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 14.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@loader_path/../Frameworks",
					"@loader_path/Frameworks",
				);
				MACOSX_DEPLOYMENT_TARGET = 11.0;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = CombineSchedulersTests;
				TVOS_DEPLOYMENT_TARGET = 14.0;
				WATCHOS_DEPLOYMENT_TARGET = 7.0;
			};
			name = Debug;
		};
		OBJ_71 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DRIVERKIT_DEPLOYMENT_TARGET = 19.0;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = "combine-schedulers.xcodeproj/CombineSchedulersTests_Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 14.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@loader_path/../Frameworks",
					"@loader_path/Frameworks",
				);
				MACOSX_DEPLOYMENT_TARGET = 11.0;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = CombineSchedulersTests;
				TVOS_DEPLOYMENT_TARGET = 14.0;
				WATCHOS_DEPLOYMENT_TARGET = 7.0;
			};
			name = Release;
		};
		OBJ_95 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/ManifestAPI -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk -package-description-version 5.5.0";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_96 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/ManifestAPI -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk -package-description-version 5.5.0";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_100 /* Build configuration list for PBXAggregateTarget "combine-schedulersPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_101 /* Debug */,
				OBJ_102 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_2 /* Build configuration list for PBXProject "combine-schedulers" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_48 /* Build configuration list for PBXNativeTarget "CombineSchedulers" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_49 /* Debug */,
				OBJ_50 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_69 /* Build configuration list for PBXNativeTarget "CombineSchedulersTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_70 /* Debug */,
				OBJ_71 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_94 /* Build configuration list for PBXNativeTarget "combine-schedulersPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_95 /* Debug */,
				OBJ_96 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
